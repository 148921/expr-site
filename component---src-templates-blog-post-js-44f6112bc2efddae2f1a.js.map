{"version":3,"sources":["webpack:///./src/components/ReadProgressLine.js","webpack:///./src/templates/blog-post.js","webpack:///./node_modules/scrollprogress/dist/scrollProgress.js"],"names":["ReadProgressLine","_this","_React$Component","call","this","state","progress","componentDidMount","_this2","progressObserver","ScrollProgress","x","y","setState","componentWillUnmount","destroy","render","style","backgroundColor","height","position","top","left","zIndex","width","react_default","a","createElement","className","React","Component","Template","_ref","data","location","post","markdownRemark","Layout","ReadProgressLine_ReadProgressLine","frontmatter","title","dangerouslySetInnerHTML","__html","html","__webpack_require__","d","__webpack_exports__","pageQuery","module","exports","noop","handleUpdate","_handleUpdate","_viewportHeight","_getViewportHeight","_viewportWidth","_getViewportWidth","_progress","_getProgress","_onScroll","bind","_onResize","window","addEventListener","prototype","document","body","scrollHeight","innerHeight","scrollWidth","innerWidth","scrollX","pageXOffset","scrollY","pageYOffset","trigger","removeEventListener","factory"],"mappings":"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","file":"component---src-templates-blog-post-js-44f6112bc2efddae2f1a.js","sourcesContent":["import React from 'react'\nimport ScrollProgress from 'scrollprogress'\n\nexport default class ReadProgressLine extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      progress: 0\n    }\n  }\n\n  componentDidMount() {\n    this.progressObserver = new ScrollProgress((x, y) => {\n      this.setState({ progress: y * 100 })\n    })\n  }\n\n  componentWillUnmount() {\n    this.progressObserver.destroy()\n  }\n\n  render() {\n    const style = {\n      backgroundColor: '#0175d8',\n      height: '5px',\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      zIndex: 9,\n      width: `${this.state.progress}%`\n    }\n\n    return <div className=\"progress-bar\" style={style} />\n  }\n}\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport ReadProgressLine from \"../components/ReadProgressLine.js\";\n\nexport default function Template({ data, location }) {\n  const { markdownRemark: post } = data; // data.markdownRemark holds our post data\n\n  const website = `https://https://181192.github.io/expr-site`;\n\n  return (\n    <Layout location={location}>\n      <div className=\"blog-post-container\">\n        <div className=\"blog-post\">\n          <ReadProgressLine />\n          <h1>{post.frontmatter.title}</h1>\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: post.html }}\n          />\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      excerpt\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        dateUnformatted: date\n        path\n        title\n        tags\n        author\n        ogDescription\n      }\n    }\n  }\n`;\n","/* scrollprogress v3.0.2 - 2017 Jeremias Menichelli - MIT License */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.ScrollProgress = factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * Fallback noop function\n   * @method noop\n   * @returns {undefined}\n   */\n  function noop() {}\n\n  /**\n   * ScrollProgress class constructor\n   * @constructor ScrollProgress\n   * @param {Function} handleUpdate method to call on scroll update\n   * @returns {undefined}\n   */\n  var ScrollProgress = function(handleUpdate) {\n    // assign function to call on update\n    this._handleUpdate = typeof handleUpdate === 'function'\n      ? handleUpdate\n      : noop;\n\n    // set initial values\n    this._viewportHeight = this._getViewportHeight();\n    this._viewportWidth = this._getViewportWidth();\n\n    this._progress = this._getProgress();\n\n    // trigger initial update function\n    this._handleUpdate(this._progress.x, this._progress.y);\n\n    // bind event functions\n    this._onScroll = this._onScroll.bind(this);\n    this._onResize = this._onResize.bind(this);\n\n    // add event listeners\n    window.addEventListener('scroll', this._onScroll);\n    window.addEventListener('resize', this._onResize);\n  };\n\n  /**\n   * Get vertical trajectory of the viewport\n   * @method _getViewportHeight\n   * @returns {Number}\n   */\n  ScrollProgress.prototype._getViewportHeight = function() {\n    return document.body.scrollHeight - window.innerHeight;\n  };\n\n  /**\n   * Get horizontal trajectory of the viewport\n   * @method _getViewportWidth\n   * @returns {Number}\n   */\n  ScrollProgress.prototype._getViewportWidth = function() {\n    return document.body.scrollWidth - window.innerWidth;\n  };\n\n  /**\n   * Get scroll progress on both axis\n   * @method _getProgress\n   * @returns {Object}\n   */\n  ScrollProgress.prototype._getProgress = function() {\n    var x = typeof window.scrollX === 'undefined'\n      ? window.pageXOffset\n      : window.scrollX;\n    var y = typeof window.scrollY === 'undefined'\n      ? window.pageYOffset\n      : window.scrollY;\n\n    return {\n      x: this._viewportWidth === 0\n        ? 0\n        : x / this._viewportWidth,\n      y: this._viewportHeight === 0\n        ? 0\n        : y / this._viewportHeight\n    };\n  };\n\n  /**\n   * Get scroll progress on both axis\n   * @method _getProgress\n   * @returns {undefined}\n   */\n  ScrollProgress.prototype._onScroll = function() {\n    this._progress = this._getProgress();\n    this._handleUpdate(this._progress.x, this._progress.y);\n  };\n\n  /**\n   * Update viewport metrics, recalculate progress and call update callback\n   * @method _onResize\n   * @returns {undefined}\n   */\n  ScrollProgress.prototype._onResize = function() {\n    this._viewportHeight = this._getViewportHeight();\n    this._viewportWidth = this._getViewportWidth();\n\n    this._progress = this._getProgress();\n\n    // trigger update function\n    this._handleUpdate(this._progress.x, this._progress.y);\n  };\n\n  /**\n   * Trigger update callback\n   * @method trigger\n   * @returns {undefined}\n   */\n  ScrollProgress.prototype.trigger = function() {\n    this._handleUpdate(this._progress.x, this._progress.y);\n  };\n\n  /**\n   * Destroy scroll observer, remove listeners and update callback\n   * @method destroy\n   * @returns {undefined}\n   */\n  ScrollProgress.prototype.destroy = function() {\n    window.removeEventListener('scroll', this._onScroll);\n    window.removeEventListener('resize', this._onResize);\n    this._handleUpdate = null;\n  };\n\n  return ScrollProgress;\n\n})));\n"],"sourceRoot":""}